// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  jobSeeker
  employer
}

model User {
  id                String    @id @default(cuid()) @map("_id")
  email             String    @unique
  verifyTokenExpiry DateTime?
  verifyToken       String?
  name              String
  password          String
  image             String?   @default("https://res.cloudinary.com/devatchannel/image/upload/v1602752402/avatar/avatar_cugq40.png")
  province          String?
  city              String?
  district          String?
  postalCode        String?
  createdOrg        String?
  address           String?
  industryType      String?
  totalEmployee     Int?
  description       String?
  role              Role      @default(jobSeeker)
  

  jobs          Jobs[]            @relation("UserJobs")
  applications  JobApplications[]
  JobApplicants JobApplicants[]
}

model Jobs {
  id             String   @id @default(cuid()) @map("_id")
  title          String
  description    String
  location       String
  salary         Int
  companyId      String   @default(cuid())
  employmentType String
  jobLevel       String
  skills         String[]
  requirements   String
  keywords       String[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userId         String

  user          User              @relation("UserJobs", fields: [userId], references: [id])
  applications  JobApplications[]
  JobApplicants JobApplicants[]
}

model JobApplications {
  id        String   @id @default(cuid()) @map("_id")
  jobId     String
  userId    String
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  job  Jobs @relation(fields: [jobId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model JobApplicants {
  id        String   @id @default(cuid()) @map("_id")
  jobId     String
  userId    String
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  job  Jobs @relation(fields: [jobId], references: [id])
  user User @relation(fields: [userId], references: [id])
}
